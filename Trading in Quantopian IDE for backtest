import quantopian.algorithm as algo
from quantopian.pipeline import Pipeline
from quantopian.pipeline.data.builtin import USEquityPricing
from quantopian.pipeline.filters import QTradableStocksUS
import numpy as np
import pandas as pd


def initialize(context):
    #Tech Sector from Jan - Oct 2019
    context.tech_avgs = np.array([[ 71.3137576138, -102.531086249, -6.43404845023, -6.23288288399, -40.4821404188, -10.2450679449, -161.551170116, 215.930533224, 38.7747716747, -33.3326477261, 15.9418191325, -13.7879249136], 
                                 [ 159.255383314, 18.9106925406, 38.2974049551, 3.40386099661, 215.715813913, -43.9269927946, 65.2856321033, 19.4563622183, -9.89127703945, 6.22760210173], 
                                 
                                 [ 99.3915239086, 13.2550548383, -28.3541561731, 14.8242443518, -73.1554731226, 14.708290499, 45.9778447204, -81.9093412758, -26.993636712, -134.933094675, 36.1529138947], 
                                 
                                 [ -12.48366017, 9.21919863998, -44.8051175845, -12.5304479854, -4.34626798443, 47.3690766334, 6.49205858182, -6.73418862157, -4.17470928291, 19.9492774739, 53.6336104844, -120.276283763], 
                                 
                                 [ 27.7245588401, 38.0368835414, 46.2482716517, 51.6987719268, -31.0468873208, 74.1896279883, -77.5075913813, 2.83238808957, 10.6844262575, -48.7750279574, 42.5966537767, -330.134184175, -1.94166661989], 
                                 
                                 [ -9.11287014004, -2.10693999583, -7.62899728605, 4.31965312293, 78.0798915692, 1.94703503962, -31.96009527, 91.1321906763, 45.5576001704, -19.6978407511, -94.4870336558, 104.894392486, 33.8712339762], 
                                 
                                 [ 151.507822769, 250.044544385, 426.288508524, 2.54243547598, 8.75522902163, 5.55056136173, -1.19589267367, -20.5241872891, -565.798486641, 172.190256792, 98.7283375451], 
                                 
                                 [ -4.47570495639, 35.5435637996, -51.6380419068, 84.5719529387, 19.2563642961, -21.7939195988, -64.2204835198, 8.53221718809, 11.111187936, 52.1653482792, 9.60338847297], 
                                 
                                 [ 334.10262676, -8.66667031559, 450.932313194, 22.4833551437, -97.9738583192, 25.5529777255, 50.4642366843, 160.989981094, 113.764083571, 127.682766911, 15.4431119299], 
                                 
                                 [ -27.8781844207, 17.7904287951, 49.3483351545, -69.8428108199, 125.755337271, 87.3308982245, 431.407835292, 153.059964242, -15.7919217018, 94.679126866, 252.275262243, 3.08814857946]])


    context.tech_stds = np.array([[ 4.34623397978, 5.21747016019, 7.49322970442, 0.485577826917, 2.8758555521, 3.60557809031, 9.96495214467, 18.4440844289, 1.9467557752, 3.46206728393, 3.83276888076, 3.45824374123], 
                                [ 8.74428722119, 2.49964583251, 2.95430673599, 0.92216115417, 23.7950650928, 2.09169823244, 10.9827687992, 3.23092176424, 0.803061974199, 1.87972365011], 
                                [ 11.5277438638, 1.71316250395, 3.73258954504, 1.44306401226, 6.3697476374, 0.966169980228, 4.23598271788, 5.33137240619, 2.06210898505, 9.11962560726, 2.01704183105], 
                                [ 1.04532225607, 8.23083534982, 2.75675131166, 0.492417734977, 0.543546528298, 5.38804993805, 4.96867042017, 4.84656410182, 1.49356123606, 9.27753857461, 11.3043909202, 5.39210800755], 
                                [ 2.23318185695, 5.5062219917, 1.33949570999, 3.95407878179, 7.19270058885, 4.25460944789, 9.6220944178, 0.880105066011, 2.76562838773, 5.6896388482, 2.67406001162, 1.97509286795, 0.830852512842], 
                                [ 2.37101803911, 3.58944688106, 2.28166960122, 0.69311438331, 2.94002954355, 0.734613914753, 2.03142881645, 5.31749195657, 1.39557919622, 1.62130438993, 2.93385287828, 3.80865140556, 4.97278781787], 
                                [ 5.5220850948, 5.3747330635, 9.53955087484, 2.2982465481, 0.943234630636, 0.366818191428, 1.67981103292, 3.40728774218, 15.6406907113, 3.48543552827, 4.21850797906], 
                                [ 3.175208594, 2.32092960035, 3.55034424898, 3.36434462164, 1.56108974977, 3.37375714766, 6.26903972442, 5.94806009375, 4.38567464993, 5.68419283928, 1.45010430303], 
                                [ 8.49207093414, 4.59736862887, 8.81813169704, 3.12475912306, 4.55521171363, 1.81054041711, 2.63809632122, 4.06794015617, 6.04982086946, 2.59407039255, 3.220164768], 
                                [ 1.72829725832, 1.43227117486, 2.39511829395, 2.81745640452, 2.35733357384, 4.95981037537, 8.20769438655, 7.02305287451, 0.744641622124, 3.96056575081, 13.1687759159, 5.83892867466]])


    context.tech_sids = np.array([  [[ 24, 9883, 4246, 32902, 465, 18870, 42815, 43127], [ 67, 18221, 3951, 5061, 41484, 1900, 2602, 51895], [ 114, 4537, 6295, 43202], [ 122, 8677, 8132, 42950, 24518, 50683], [ 337, 8344, 7272, 7671, 34014, 15101, 25555], [ 351, 49610, 3241, 5692, 43510, 1419, 23821, 8655, 34545], [ 3735, 49506, 7401, 20680, 20541, 26401, 16820, 46693], [ 3766, 50049, 4974, 21666, 26578], [ 5121, 47063, 5149, 14014, 21429, 38650, 26470, 45815], [ 13905, 48384, 20239, 14774, 49288], [ 19725, 50716], [ 39994, 50338]], 
                                  
                                  [ [ 24, 13905, 3951, 15101, 49610, 20680, 47063], [ 67, 39994, 1419, 3735, 19725, 20541, 45815, 23821, 48863], [ 114, 21666, 5149, 14014, 9883, 16820], [ 122, 18221, 337, 21429, 42950, 49288, 2602, 50049, 7272], [ 351, 3766, 32902, 41484, 7671, 26578], [ 465, 3241, 1900, 7401, 5061, 5121], [ 4246, 5692, 8132, 18870, 14774, 51895, 25555, 49506, 34545], [ 4537, 50338, 38650, 43510, 50683, 26470, 34014, 46693, 50716], [ 4974, 20239, 43202, 49608, 42815, 43127, 8655, 51854], [ 6295, 8344, 8677, 26401, 48486, 24518, 50077, 51689]], 
                                  
                                  [ [ 24, 51689, 114, 5121, 18870, 3241, 20680, 14774, 47063], [ 67, 39994, 5692, 8655, 7401, 15101, 6295, 20239, 45815], [ 122, 50288, 7272, 34545, 337, 41484, 3735, 13905], [ 351, 34014, 2602, 50716, 465, 24518, 26401, 32902], [ 1419, 51895], [ 1900, 4974, 3951, 50338, 25555, 51854], [ 3766, 7671, 26578, 46693, 48863, 49288, 8677, 18221], [ 4246, 50683, 5061, 5149, 9883, 19725, 43127, 43202, 49610], [ 4537, 21429, 14014, 21666, 26470, 42815, 50758], [ 8132, 23821, 42950, 49608, 8344, 50077, 38650, 43510], [ 16820, 20541, 49506, 50049]], 
                                  
                                  [ [ 24, 19725, 34014, 39994, 3766, 41484], [ 67, 21429, 8344, 43127], [ 114, 337, 16820, 20239, 4974, 48863, 49288, 26401, 42815], [ 122, 42950, 3735, 14014, 5121, 23821, 8655, 50683], [ 351, 50716, 465, 3676, 5061, 34545, 3241, 49506], [ 1419, 51895, 38650, 50758, 9883], [ 1900, 4246, 6295, 7272, 13905], [ 2602, 26578, 5692, 7401, 7671, 20541, 46693, 49608, 49655], [ 3951, 50288, 18870, 24518, 25555, 51689], [ 4537, 26470, 21666, 43202, 5149, 50338, 51854, 38965, 43510], [ 8132, 20680, 8677, 49610, 14774, 47063], [ 15101, 50049, 18221, 50077]], 
                                  
                                  [ [ 24, 38650, 4246, 18221, 8677, 38965], [ 67, 39994, 1419, 50758, 3676, 43510], [ 114, 41484, 18870, 26401, 21666, 34014], [ 122, 43127, 351, 13905, 8344, 43202, 49610, 51895], [ 337, 50077], [ 465, 23821, 3766, 21429, 5692, 45667, 19725, 46693], [ 1900, 25555, 20239, 4537, 48863, 6295, 45815, 14774, 47063], [ 2602, 14014, 3735, 50338, 4974, 7272, 9883, 51854], [ 3241, 49506, 5061, 34545, 42815, 50716, 47912, 49288], [ 3951, 26578, 5121, 26470, 7671, 42950], [ 5149, 49608, 8655, 15101], [ 7401, 20680, 8132, 24518, 16820, 49655, 20541, 50049], [ 50288, 50683]], 
                                  
                                  [ [ 24, 5692, 465, 8132, 6064, 49506, 2602, 6295, 20680], [ 67, 351, 24518, 42815, 42950, 50716, 50758], [ 114, 34014, 19725, 49288], [ 122, 26578, 3951, 16820, 5121, 21429], [ 337, 41484, 14014, 50338, 7671, 50049, 8344, 15101], [ 1419, 46693, 3766, 5149, 38650, 3241, 7272, 7401, 21666], [ 1900, 50288, 3676, 49608], [ 3735, 50683, 9883, 4537, 26470, 49610], [ 4246, 47063, 51854, 18221, 43510, 8655, 8677, 14774, 48863], [ 4974, 20541, 34545, 50077, 5061, 25555, 18870, 47912, 45815], [ 13905, 43202, 51895, 20239, 43127, 39994], [ 23821, 38965, 51937, 26401], [ 45667, 49655]], 
                                  
                                  [ [ 24, 337, 49222, 51854, 2602, 4974, 43510], [ 67, 14014, 45815, 5121, 38965, 20541, 23821, 47912, 49655], [ 114, 50683, 1900, 14774, 6064, 6295, 43127], [ 122, 24518, 45667, 50758, 3951, 18870, 19725, 49288], [ 351, 5061, 5149, 5692, 8655, 7272, 8344, 25555, 41484], [ 465, 3766, 3735, 46693, 13905, 26578, 21429, 49506], [ 1419, 16820, 16453, 34545, 44747, 50338, 50077, 26401, 51937], [ 3241, 8132], [ 3676, 50716, 9883, 39994, 7671, 15101, 47063], [ 4246, 42815, 50288, 21666, 51895, 43202, 49608, 26470, 49610], [ 4537, 48863, 38650, 50049, 8677, 20239, 34014, 42950]], 
                                  
                                  [ [ 24, 122, 4537, 45815, 26401, 3241, 7272, 21429, 38965], [ 67, 6295, 3766, 4246, 8655, 51895, 19725, 23821], [ 114, 25555, 47063, 50716, 4974, 21666, 45667, 50758], [ 337, 7671, 14014, 24518, 1419, 43127, 13905, 49222], [ 351, 34014, 3951, 15101, 44747, 50288, 49506, 50049], [ 465, 18870, 1900, 8344, 38650, 39994, 47912, 46918, 50077], [ 2602, 6064, 26470, 3735, 5692, 5149, 42950, 41484, 43510], [ 5061, 16453, 49610, 50338, 14774, 50683, 16820, 46744], [ 5121, 8132, 26578, 43202, 49288, 51937, 46693, 49608, 49655], [ 8677, 42815], [ 9883, 20239, 34545, 48863]], 
                                  
                                  [ [ 24, 7671, 19725, 38650, 3951, 8344, 4974, 34545], [ 67, 6064, 122, 42950, 337, 50288, 8677, 42815], [ 114, 47912, 351, 50758, 2602, 15101, 26470], [ 465, 49506, 1900, 14014, 26401, 3735, 49610, 8655, 25555], [ 1419, 4537, 26578, 4246, 8132, 20239, 50716], [ 3241, 34014, 6994, 51937, 46744, 48863], [ 3766, 7272, 5149, 45815, 9883, 21429, 47063, 23821, 38965], [ 5061, 45667, 5121, 14774, 51314, 13905, 16820], [ 5692, 46693, 6295, 16453, 51895, 21666, 43202, 49655], [ 18870, 24518, 43510, 46918, 49608, 50049], [ 39994, 50338, 50683, 43127, 50077]], 
                                  
                                  [ [ 24, 47921, 26401, 43510, 46918], [ 67, 26578, 4537, 24518, 6064, 9883, 21429], [ 114, 8344, 33316, 465, 49506, 6994, 19725, 337, 7671], [ 122, 23821, 2602, 43202, 13905, 26470, 38965], [ 351, 15101, 43127, 46693, 50049, 47912, 6295, 18870], [ 1419, 20239, 50077, 50716, 5121, 39994, 47063, 49608, 49655], [ 1900, 45815, 7272, 16820, 4974, 8655, 25555, 34545], [ 3241, 3735, 34014, 50338, 14774, 16453, 42815, 45667], [ 3766, 21666, 5149, 14014, 5061, 50683], [ 3951, 8677, 4246, 8132, 49610, 51314, 50288, 51937], [ 5692, 42950, 38650], [ 46744, 48863, 50758, 51895]]    ])


    context.tech_weights = np.array([  [[ -0.0432571832475, 0.085342416824, 0.208383308404, -0.5533609419, 0.537292607868, -0.708615287171, -0.936950378598, 1.0], [ -0.0101503396991, 0.0209079043269, -0.155208309947, -0.124189518391, 0.347491577877, -2.38485300987, -1.37324129557, 1.0], [ 0.102734457795, -0.191889289669, -3.21723478473, 1.0], [ 0.223211434619, -0.149850098131, 0.0964206261011, -0.0625032617946, -0.407575066897, 1.0], [ 0.136644460822, 0.19179861152, -1.08083470342, -0.302994504814, 0.312983791545, -1.73624869746, 1.0], [ 0.196342399548, -0.0940372417685, 0.811585767242, -1.05579013167, -0.285335400044, -1.47159161913, 0.760605422207, -0.200172595615, 1.0], [ 10.4310224954, -15.2341398366, -0.783689453087, 0.716736670197, -0.10466359516, -0.35569175434, -1.97858797087, 1.0], [ -1.21756525235, 3.03117144437, -2.8816247813, -35.627422985, 1.0], [ 0.314858378438, -0.086322092726, 0.161832091337, -0.211582996345, 0.245017339485, 0.0726396532623, 0.0422950880902, 1.0], [ 0.0716123509717, -0.0959824687816, -0.681284973187, -0.62286789417, 1.0], [ -0.278417375645, 1.0], [ -0.706507039736, 1.0]], 
                                    
                                     [ [ 0.0638966482968, -0.196966381856, 1.15375927574, 2.10946858578, -0.933304501524, -4.3436355912, 1.0], [ 0.034715698673, -0.0629634831483, -0.316778178487, 0.966718999827, -0.0168449702453, -0.0543623234922, 0.547495027353, -0.773698871444, 1.0], [ 0.0490516547251, -0.64803237939, 0.412042351194, -0.447886907477, -0.877170955515, 1.0], [ 0.074736203644, -0.0539631507968, -0.0835752559103, 0.197871410252, -0.0591317632256, 0.0836333156218, 0.167634262488, -0.361666354564, 1.0], [ -0.176401984167, 0.0674016214921, 0.616405212007, -1.12237259335, -9.02227993799, 1.0], [ 0.461119025631, -1.37292860777, 1.36569137696, -1.23723857795, -0.915015872563, 1.0], [ -0.134998728571, 0.858422058463, 1.12705217868, -2.08532138376, 0.37121871663, -0.247942523658, -0.59534354196, 6.02803833189, 1.0], [ -0.0071079508555, 0.021404032998, 0.009612600151, -0.0118838530852, -0.456701095706, -0.196221584086, 0.560000274349, -0.565156016219, 1.0], [ -0.00156575209398, 0.0150349703663, 0.0021577977139, -0.00761508202446, -0.0122674656352, 0.0129713258394, -0.165836185453, 1.0], [ 0.0883355111216, 0.106724364692, -0.170958457169, -0.201260336297, 0.948027668178, -0.606217602292, 0.182983654139, 1.0]], 
                                     
                                     [ [ -0.0252549411587, 0.223642467611, -0.0613411502751, -1.43405738259, 1.53629836148, 3.99978724655, -2.92663845097, -0.987642333972, 1.0], [ 0.0120496159277, -0.0239701226881, 0.129187680329, -0.0223825080425, -0.349117025397, 0.225354351201, 0.189800198553, -1.56743482501, 1.0], [ 0.136098498576, -0.0630727774516, -1.11428901879, 0.226793409461, 0.507103224474, -0.698559437377, -4.62224443204, 1.0], [ -0.10397876401, 0.109915884751, -0.0954100384243, 0.094443022407, 0.271287885255, -0.476089725674, -0.266403290286, 1.0], [ -3.70906620429, 1.0], [ 0.23611687185, -0.0789936435507, 0.454713845158, -0.244270380837, -0.130436507972, 1.0], [ 0.0387194858809, -0.0940314565402, -0.00545407523698, 0.0157690704228, 0.237670043592, -0.249903431491, -1.42194809718, 1.0], [ -0.293185623613, 2.17825800051, -1.43108550521, 0.692671654777, 0.649230938012, -0.196841394081, 0.427883899133, -0.537050300049, 1.0], [ -0.0100412637393, 0.0749704850595, -0.0369191993592, 1.39455866317, -0.146369489695, -0.771648844547, 1.0], [ 0.172976840913, -0.153939629, -0.337010718521, 0.61909373375, 0.493081942045, -0.517357376773, -1.07664662943, 1.0], [ 0.114867460249, 0.094435133972, -4.42038467078, 1.0]], 
                                     
                                     [ [ -0.0174603870591, 0.0151424024247, -0.19303739267, 0.106681281619, -0.292571550762, 1.0], [ -0.635793672431, 3.57593846914, -1.680790268, 1.0], [ 0.024509046457, -0.14155634289, 0.0916748759106, -1.10201734966, 0.159908870296, -0.401936740941, 0.477380049098, -1.06153923071, 1.0], [ 0.00114636683352, -0.00088082733274, 0.0127496272822, -0.0125276279984, 0.0474104736561, -0.0257803945471, -0.0857066186824, 1.0], [ 0.062905790512, -0.0475866124734, 0.0445876337783, -0.0242165218529, -0.0637432519242, 0.0282081495918, -0.478574741412, 1.0], [ -0.155027951401, 0.0387530506102, 0.0341765677887, -0.0737135589445, 1.0], [ 1.24891170447, -0.411758940971, -0.812012360058, -1.5001969282, 1.0], [ -0.055547768791, 0.00988691640649, -0.211998461925, 0.172721423368, 0.328580434875, -0.667771247672, 0.758984876531, -1.57239135471, 1.0], [ 0.150550310184, -0.013799366198, 0.786950446996, -0.858305776074, -0.326926334974, 1.0], [ -0.13939739334, 0.163518457526, 6.47723354421, -0.450491271229, -2.52376127222, -1.50580039067, 9.2151287353, -2.5048534675, 1.0], [ 0.768192718352, -1.10223798141, 0.861605325874, -1.24580093575, -1.15992013157, 1.0], [ -1.40857288828, 1.90861186202, -1.25655879831, 1.0]], 
                                     
                                     [ [ -0.0526936041018, 0.0413034097202, -0.238758855906, 0.223430288585, -0.809251708292, 1.0], [ -0.0729119634735, 0.128117937237, 0.984204736868, -0.353800398121, -1.11025792264, 1.0], [ -0.0127654119372, 0.0711592621582, 0.205529377214, -0.0813325855826, -1.88254183538, 1.0], [ -0.0162287500718, 0.00614955211678, -0.0911448351727, 0.0650298710786, -0.166561943684, 0.121776502769, -1.32142912517, 1.0], [ -3.74040922009, 1.0], [ -0.34683057902, 0.346308389845, 0.36591936936, -1.63473415498, -1.44273486167, 0.289041885638, 0.181009633746, 1.0], [ -1.86575066935, 0.732265369198, -5.49057144947, 0.0905548401338, -0.34810899602, 0.272534429051, -1.3891876002, -1.38442019449, 1.0], [ -0.0312772507704, -0.23310692958, 0.366746835609, -0.114760977625, 0.111067349253, -0.870429054119, 0.196226955145, 1.0], [ 0.19535375804, -0.399379159964, 0.20677534215, -0.0970132606863, -0.216957440124, 0.63793283617, -2.2197827914, 1.0], [ -0.261955595228, 0.0150619552432, 0.560647664762, -0.147131918772, -1.96045054096, 1.0], [ 0.057425980374, -0.0327989826179, -0.323587059589, 1.0], [ -0.050786259634, 0.0535981397715, -0.242846478573, 0.344039597485, -0.110249560597, -0.101791809921, -2.18939190578, 1.0], [ -0.0636561962625, 1.0]], 
                                     
                                    [ [ 0.00701899181773, -0.0549774206097, -0.252564338076, 0.383749111099, 0.345050439754, -2.44083413868, -0.496527407273, -0.314320408181, 1.0], [ 0.187106726647, -0.930020446128, 0.815765214154, -0.453343330469, -0.743024603185, 0.795480504756, 1.0], [ 0.211135166315, -0.686017092928, -0.349382860388, 1.0], [ 0.0223244574379, -0.00412811115899, 0.0620487321179, 0.0518539570934, -0.569321444233, 1.0], [ 0.0899715976701, -0.112581305602, 0.108212286028, -0.0799572990601, 0.4028881134, -0.463916617941, -0.459700289519, 1.0], [ 0.0493061148466, 0.0588872268221, -0.0196630110192, -0.247846374826, 0.034182307963, 0.215845843715, -0.302052174144, -0.484444985522, 1.0], [ -0.466951191247, 0.0673016772254, -0.479767121754, 1.0], [ 0.0361036521199, 0.0513213568272, 0.135314361011, -0.076773933825, 0.121671299366, 1.0], [ -0.0375327444499, 0.0114604149077, 0.239794617737, 0.129584162771, -0.138427682857, 0.0559120768802, -0.209498563586, -0.176566611815, 1.0], [ 0.0403894331392, -0.153615367196, -0.0811676888394, 0.127082992796, -0.360748185698, 0.275891696857, -0.160031448455, -0.883037498445, 1.0], [ -0.247454741975, 0.0842417641445, -0.220770145742, -3.52711106384, -0.276456991901, 1.0], [ -0.602945093599, 0.780208335705, -1.30071939951, 1.0], [ -0.602434752389, 1.0]], 
                                     
                                     [ [ -0.0434874388849, 0.326815794595, 0.146493500464, -0.766628292922, 0.55938321877, -0.659763800685, 1.0], [ -0.284976747849, 0.804983502613, 1.42541708644, -0.373014685579, 0.27086070883, 0.537831608686, 0.391496696598, -2.87549618106, 1.0], [ 0.482026689792, -3.8777363552, 1.38874817781, -0.217633700816, 1.27912722237, -1.05664948845, 1.0], [ 0.0475525185107, -0.166362422127, 0.17794625687, -0.183592329917, -0.355737408886, 0.334371719183, -0.351728561109, 1.0], [ 0.00459808307908, -0.00158584405519, -0.00390831623373, 0.00967406287423, -0.0013959656839, -0.0301793736255, 0.00685354911662, -0.159102292875, 1.0], [ 0.000633987408803, -0.0009476774657, -0.00408354189467, 0.00126535606387, 0.00666906452951, -0.00067772996102, -0.442268256245, 1.0], [ 0.104817744993, -0.102126147911, -0.160678921602, -0.0709751777682, 0.0236670959623, 0.101414629246, 0.1289155769, -0.353661849645, 1.0], [ -2.03000399469, 1.0], [ 0.324978949732, 0.766550103929, 0.791631522304, -0.781812353235, -2.70661153227, -5.10781222588, 1.0], [ 0.0456213086688, -0.119378450304, -0.0572855911119, 0.024174375154, 0.0567793825836, 0.0911420499098, 0.349480076907, 0.322963041995, 1.0], [ -0.0623166099465, 0.258479003658, 0.0831510231801, -0.494661551159, -0.702257397655, 5.78039136297, -1.84576587198, 1.0]], 
                                     
                                     [ [ 0.0283111952257, -0.0591994322079, 0.0320934972897, -0.169937388888, -0.201267636328, 0.990649173143, -1.22071725082, -2.87001773255, 1.0], [ -0.0698173883325, 0.0636976532251, 0.496806193943, -0.29620140595, 0.127157452268, -0.274733724703, -0.394004070865, 1.0], [ 0.0722250144106, -0.134545163207, 0.0447060974324, -0.246529012289, 0.100570100343, -0.734256549668, -1.04710347119, 1.0], [ -0.371120648096, 0.226064351603, 0.300354420752, -0.728033665165, 0.728992800927, -0.263784167754, 0.606637413129, 1.0], [ -0.0217239532755, 0.0214858063822, 0.040310050238, -0.0468967277353, 0.0247330053787, -0.0296872437475, -3.79411148676, 1.0], [ 0.00119373173076, -0.00160940672666, -0.00855483260305, 0.00408178204145, -0.00311183822214, 0.0145647288299, -0.231888457613, -1.72618381113, 1.0], [ -0.222123608464, -0.155149301718, -0.18630436635, -2.53314397266, 1.14433380628, 1.20832432835, -0.43275800129, -5.12638202993, 1.0], [ -0.015128984287, 0.0642351017078, 0.0300308074009, 0.141703991981, -0.167390616036, 1.73861020877, -1.91762582272, 1.0], [ -0.145955401948, 0.109859468059, 0.00506564166512, -0.0199744059671, -0.0234812684169, 0.275106739113, -0.454037213439, -1.42429235095, 1.0], [ -0.861120269385, 1.0], [ 0.365376362457, -1.66179025924, -0.206905902126, 1.0]], 
                                     
                                     [ [ 0.143030455674, -0.247309308931, 0.335507937629, -0.315016534733, 2.23845563361, -0.969159702046, 1.221890775, 1.0], [ -0.126861301333, 0.142826297361, 0.549813086776, -0.53555815038, -0.665013050617, 0.115849658233, -0.960831589136, 1.0], [ 0.0235173562956, -0.402964280239, -0.433908108789, 0.0770353327994, 0.543511043343, 1.54798561251, 1.0], [ -0.076994364022, 0.436986738741, -0.124629509057, 0.149919857039, -0.107226931478, -2.75183804095, 0.502629512324, -0.508924437951, 1.0], [ 0.0920612751544, -0.0473320235362, 0.0148367792499, 0.275308484487, -0.58579882931, -6.52772868964, 1.0], [ 0.0712861309875, -0.239334628253, -0.188571360428, -0.878611977409, 0.188262670607, 1.0], [ 0.038759980627, -0.249537648444, -0.0322128653013, -0.274877839428, 0.683183858055, 1.42411321968, -0.0931606101604, -0.698358951375, 1.0], [ -0.161947042106, 0.0837807602472, -0.16740889592, 0.054952104238, -0.140520604987, 1.22790138836, 1.0], [ -1.22520935607, 0.657424536071, 0.150317138035, 1.45012860117, -0.763399102702, -2.68826348993, 0.504621981047, 1.0], [ -0.0433970963255, 0.194209314567, 0.134129218423, -0.309025625208, 0.58815067034, 1.0], [ 0.234478306768, -0.442362822808, -1.80848114261, -0.387257764736, 1.0]], 
                                     
                                     [ [ 0.120654595484, -0.220505568135, -0.267893041053, -0.383300361364, 1.0], [ 0.00807414383021, 0.0044357922155, -0.0254526137345, 0.150670887729, -0.0328659185803, -0.155299472088, 1.0], [ 0.0285409607374, -0.0630240517237, 0.147463596891, -0.0906469781302, 0.599170208861, 0.0524728978738, -0.0576997006028, -1.84095472643, 1.0], [ -0.673354189633, 0.844514167806, -0.227869923859, -0.223548804487, -0.239701558726, -0.24944481756, 1.0], [ 0.0681853657643, 0.0408897718354, -0.0198542756509, -0.132534482851, 0.214597855319, 1.62085003635, 0.010293441861, 1.0], [ 0.310339966832, -0.993172403367, -0.134956015596, 0.190899464189, -0.613818521669, 0.753331392346, -0.0406701642131, -0.962637276139, 1.0], [ -0.216346045247, -0.389974744956, -1.65846317128, 0.583599995723, 1.64971680411, -1.43766659502, 1.95739898267, 1.0], [ -3.13733448662, 7.09405825058, -0.113452720415, 1.04288518941, 0.25217184684, -2.35345989975, -0.135032292951, 1.0], [ -0.070013137184, 0.389841246294, -0.192190845643, 0.304009197129, -0.362268387223, 1.0], [ -0.772241591689, 0.433121432752, -0.0967440004844, 0.217853879172, -0.155090994236, 0.138813834356, 0.141122819399, 1.0], [ 2.86310075597, -0.981089489157, 1.0], [ -0.0778732814348, -0.484541475575, -0.697585119167, 1.0]]])
    
    
    context.month = 0
    context.prev_month = get_datetime('US/Eastern').month
    context.tech_prices = []
    context.tech_orders = []
    context.tech_dot = []
    context.stop_loss_threshold= 0.8
    context.is_trade = True
    
    schedule_function(update_month, date_rules.every_day(), time_rules.market_open())
    schedule_function(trade_prep, date_rules.every_day(), time_rules.market_open())
    schedule_function(cantrade, date_rules.every_day(), time_rules.market_open())
    schedule_function(clear_position, date_rules.month_end(),time_rules.market_close())

   

def trade_prep(context, data):
    if not context.is_trade:
        return
    current_month = context.month
    
    tech_sids = context.tech_sids[current_month]
    tech_weights = context.tech_weights[current_month]
    
    tech_prices = context.tech_prices
    tech_orders = context.tech_orders 
    tech_dot = context.tech_dot
    del tech_prices[:]
    del tech_orders[:]
    del tech_dot[:]
   
    portfolios = len(tech_sids)
    
    # array of prices for each portfolio array 
    for i in range (portfolios):
        # tech_sids is for each portfolio array, we will make a price array
        # each portfolio array also needs to be multiplied by weights for an order array     
        tech_sids = context.tech_sids[current_month][i]
        price = []
        for i in range (len(tech_sids)):
            current_price  = data.current(algo.sid(tech_sids[i]), "price")
            price.append(current_price)   
        # tech_prices now is just an array we want to append the price array of a portfolio into 
        tech_prices.append(price)   
    context.tech_prices = tech_prices
    
    
    
    # array of orders for each portfolio array
    for i in range (portfolios):
        tech_weights = context.tech_weights[current_month][i]
        tech_prices = context.tech_prices[i]
        order = []
        for i in range (len(tech_prices)):
            order.append(tech_weights[i] * tech_prices[i])
        tech_orders.append(order)    
    context.tech_orders = tech_orders
    
    
    dot = []
    for i in range (portfolios): 
        tech_prices = context.tech_prices[i]
        tech_weights = context.tech_weights[current_month][i]
        dot.append(np.dot(tech_prices, tech_weights))
    context.tech_dot = dot
    #print("dot array: ", dot)
    
    
def cantrade (context, data):
    if not context.is_trade:
        return
    current_month = context.month;
    tech_sids = context.tech_sids[current_month]
    portfolios = len(tech_sids)
    
    
    for i in range (portfolios):
        stop_loss_threshold = context.stop_loss_threshold

        # access all arrays by context
        tech_sids = context.tech_sids[current_month][i]
        tech_weights = context.tech_weights[current_month][i]
        tech_prices = context.tech_prices[i]
        tech_orders = context.tech_orders[i]
        
        # access scalar values by context
        tech_avg = context.tech_avgs[current_month][i]
        tech_std = context.tech_stds[current_month][i]
        tech_dot = context.tech_dot[i]
        

        if context.portfolio.portfolio_value < 1000000 * stop_loss_threshold:
            for i in range (len(tech_orders)):
                order_target_percent(algo.sid(tech_sids[i]),0)
            print ("We are losing too much. Clear position and stop.")
            context.is_trade = False
                
        
        if tech_dot > tech_avg:
            for i in range (len(tech_sids)):
                short = (-1) * (tech_orders[i] - tech_avg) / tech_std
                order_target_value(algo.sid(tech_sids[i]), short*context.portfolio.portfolio_value/500)
                
            
        if tech_dot < tech_avg:
            for i in range (len(tech_sids)):
                long = (tech_avg - tech_orders[i]) / tech_std 
                order_target_value(algo.sid(tech_sids[i]), long*context.portfolio.portfolio_value/500)
               
                
                
                

def update_month (context, data):
    today = get_datetime('US/Eastern')
    if today.month != context.prev_month:
        context.month += 1
        context.prev_month = today.month
    
    
def clear_position(context, data):
    if not context.is_trade:
        return
    current_month = context.month;
    tech_sids = context.tech_sids[current_month]
    portfolios = len(tech_sids)
    
    for i in range (portfolios): 
        tech_sids = context.tech_sids[current_month][i]
      
        for i in range (len(tech_sids)):
            order_target_percent(algo.sid(tech_sids[i]), 0)
            print ("cleared")
